// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String  @id @default(cuid())
  username     String @unique
  email    String  @unique
  password String
  role     Role  @default(USER)
  createdAt DateTime @default(now())

  // İlişkiler
  lessons   Lesson[]       @relation("UserLessons")
  messagesSent     Message[] @relation("MessagesSent")
  messagesReceived Message[] @relation("MessagesReceived")
  profile   Profile?

}

model Lesson {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique  
  content   String
  authorId  String
  author    User     @relation("UserLessons", fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  category  Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
}

model Message {
  id         String   @id @default(cuid())
  text       String
  createdAt  DateTime @default(now())
  senderId   String
  receiverId String
  sender     User     @relation("MessagesSent", fields: [senderId], references: [id])
  receiver   User     @relation("MessagesReceived", fields: [receiverId], references: [id])
}

model Category {
  id      String   @id @default(cuid())
  name    String   @unique
  lessons Lesson[]
}

model Profile {
  id       String   @id @default(cuid())
  bio      String?
  avatar   String?
  userId   String   @unique
  user     User     @relation(fields: [userId], references: [id])
}
